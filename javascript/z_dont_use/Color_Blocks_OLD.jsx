 #target illustrator-18function fixFloSwatches(){    var docRef = app.activeDocument;    var swatches = docRef.swatches;            for (a=0; a<swatches.length; a++){        if (swatches[a].name == 'Bright Purple B'){           var brightPurple = swatches.getByName("Bright Purple B");           brightPurple.name = brightPurple.name.split('Bright Purple B').join('BRIGHT PURPLE B');        }        else if (swatches[a].name == 'Flame B'){            var flame = swatches.getByName("Flame B");            flame.name = flame.name.split('Flame B').join('FLAME B');        }        else if (swatches[a].name  == 'Flo Blue B'){            var floBlue = swatches.getByName("Flo Blue B");            floBlue.name = floBlue.name.split('Flo Blue B').join('FLO BLUE B');        }        else if (swatches[a].name == 'Flo Orange B'){            var floOrange = swatches.getByName("Flo Orange B");            floOrange.name = floOrange.name.split('Flo Orange B').join('FLO ORANGE B');        }        else if (swatches[a].name == 'Flo Pink B'){            var floPink = swatches.getByName("Flo Pink B");            floPink.name = floPink.name.split('Flo Pink B').join('FLO PINK B');        }        else if (swatches[a].name == 'Flo Yellow B'){            var floYellow = swatches.getByName("Flo Yellow B");            floYellow.name = floYellow.name.split('Flo Yellow B').join('FLO YELLOW B');        }        else if (swatches[a].name == 'Mint B'){            var mint = swatches.getByName("Mint B");            mint.name = mint.name.split('Mint B').join('MINT B');        }        else if (swatches[a].name == 'Neon Coral B'){            var neonCoral = swatches.getByName("Neon Coral B");            neonCoral.name = neonCoral.name.split('Neon Coral B').join('NEON CORAL B');        }        else if (swatches[a].name == 'cutline'){            var cutline = swatches.getByName('cutline');            cutline.name = cutline.name.split('cutline').join('CUT LINE');        }        else if (swatches[a].name == 'Cutline'){            var cutline = swatches.getByName('Cutline');            cutline.name = cutline.name.split('Cutline').join('CUT LINE');        }        else if (swatches[a].name == 'CutLine'){            var cutline = swatches.getByName('CutLine');            cutline.name = cutline.name.split('CutLine').join('CUT LINE');        }        else if (swatches[a].name == 'CUTLINE'){            var cutline = swatches.getByName('CUTLINE');            cutline.name = cutline.name.split('CUTLINE').join('CUT LINE');        }        else if (swatches[a].name == 'CUTline'){            var cutline = swatches.getByName('CUTline');            cutline.name = cutline.name.split('CUTline').join('CUT LINE');        }        else {        }    }}fixFloSwatches();function addColorBlocks(){    //Check for open document    if (app.documents.length > 0) {         //Define Global Variables        var docRef = app.activeDocument        var artLayers = docRef.layers        var aB = docRef.artboards        var swatchList = docRef.swatches;        //Push arrays                var colorList = [];        var wrongColorList = [];        //Add Color Block Layer        function existBlockLayer(layers, name) {            for (i=0; i<docRef.layers.length; i++){                if (layers[i].name===name) return true;                }            return false;            }                            if (existBlockLayer(docRef.layers,"Color Blocks")) {            var removeLayer = artLayers.getByName("Color Blocks");            removeLayer.locked = false;            removeLayer.remove();            var blockLayer = docRef.layers.add();            blockLayer.name = "Color Blocks"            }        else {            var blockLayer = docRef.layers.add();            blockLayer.name = "Color Blocks"            }                artLayers.locked = true;        blockLayer.locked = false;                  //Generate colorList        for(var k=0; k< swatchList.length; k++) {            if (swatchList[k].name.toLowerCase() != "thru-cut" && swatchList[k].name.toLowerCase() != "[registration]"//             && swatchList[k].name.toLowerCase() != "[none]" && swatchList[k].name.toLowerCase() != "cut line" //            && swatchList[k].name.toLowerCase() != "info b" && swatchList[k].name.toLowerCase() != "jock tag b" //            && swatchList[k].color.typename != "PatternColor" && swatchList[k].color.typename != "GradientColor"            ){               colorList.push(swatchList[k].name);                   }               }        //Generate wrongColorList        for(var k=0; k< swatchList.length; k++) {            if (swatchList[k].name.toLowerCase() != "black b" //            &&  swatchList[k].name.toLowerCase() != "white b" //            &&  swatchList[k].name.toLowerCase() != "gray b" //            &&  swatchList[k].name.toLowerCase() != "steel b" //            &&  swatchList[k].name.toLowerCase() != "navy b" //            &&  swatchList[k].name.toLowerCase() != "royal blue b" //            &&  swatchList[k].name.toLowerCase() != "columbia b" //            &&  swatchList[k].name.toLowerCase() != "teal b" //            &&  swatchList[k].name.toLowerCase() != "dark green b" //            &&  swatchList[k].name.toLowerCase() != "kelly green b" //            &&  swatchList[k].name.toLowerCase() != "lime green b" //            &&  swatchList[k].name.toLowerCase() != "optic yellow b" //            &&  swatchList[k].name.toLowerCase() != "yellow b" //            &&  swatchList[k].name.toLowerCase() != "athletic gold b" //            &&  swatchList[k].name.toLowerCase() != "vegas gold b" //            &&  swatchList[k].name.toLowerCase() != "orange b" //            &&  swatchList[k].name.toLowerCase() != "texas orange b" //            &&  swatchList[k].name.toLowerCase() != "red b" //            &&  swatchList[k].name.toLowerCase() != "cardinal b" //            &&  swatchList[k].name.toLowerCase() != "maroon b" //            &&  swatchList[k].name.toLowerCase() != "hot pink b" //            &&  swatchList[k].name.toLowerCase() != "pink b" //            &&  swatchList[k].name.toLowerCase() != "soft pink b" //            &&  swatchList[k].name.toLowerCase() != "purple b" //            &&  swatchList[k].name.toLowerCase() != "flesh b" //            &&  swatchList[k].name.toLowerCase() != "dark flesh b" //            &&  swatchList[k].name.toLowerCase() != "brown b" //            &&  swatchList[k].name.toLowerCase() != "cyan b" //            &&  swatchList[k].name.toLowerCase() != "flo orange b" //            &&  swatchList[k].name.toLowerCase() != "flo yellow b" //            &&  swatchList[k].name.toLowerCase() != "flo pink b" //            &&  swatchList[k].name.toLowerCase() != "twitch b" //            &&  swatchList[k].name.toLowerCase() != "mint b" //            &&  swatchList[k].name.toLowerCase() != "magenta b" //            &&  swatchList[k].name.toLowerCase() != "neon coral b" //            &&  swatchList[k].name.toLowerCase() != "flame b" //            &&  swatchList[k].name.toLowerCase() != "bright purple b" //            &&  swatchList[k].name.toLowerCase() != "dark charcoal b" //            &&  swatchList[k].name.toLowerCase() != "info b" //            &&  swatchList[k].name.toLowerCase() != "jock tag b" //            &&  swatchList[k].name.toLowerCase() != "thru-cut" //            &&  swatchList[k].name.toLowerCase() != "cut line" //            &&  swatchList[k].name.toLowerCase() != "[none]" //            &&  swatchList[k].name.toLowerCase() != "[registration]" //            &&  swatchList[k].color.typename != "PatternColor" //            && swatchList[k].color.typename != "GradientColor" //            ){                              wrongColorList.push(swatchList[k].name);                   }               }                                               //Create 1 Color Block per Swatch and Apply Swatch        var makeBlocks = function () {                        for(var c=0,len=colorList.length;c<len;c++){                var newBlock = docRef.pathItems.rectangle(posW + 2.5, posH - 2.5,5,5);                try {                    newBlock.stroked = false;                 }                catch(err){                    alert("Couldn't set stroke to none for some reason. Anywho, no matter. Press ok.")                }           }                for (var i=0; i < colorList.length; i++) {                docRef.pathItems[i].fillColor=docRef.swatches.getByName(colorList[i]).color;            }        }        for (var a=0; a<aB.length; a++) {                        var aBLeft = aB[a].artboardRect[0];            var aBRight = aB[a].artboardRect[2]            var aBTop = aB[a].artboardRect[1]            var aBBottom = aB[a].artboardRect[3]                        var posH = (aBRight+aBLeft)/2;                        var posW = (aBBottom+aBTop)/2;                       var activeArtboard = aB[a];            aB.setActiveArtboardIndex(a);                        makeBlocks();        }                      // Lock and re-order "Color Blocks" layer         //Unlock artwork layer                  blockLayer.zOrder (ZOrderMethod.SENDTOBACK);         blockLayer.locked = true;         artLayers.locked = false;         alert("Color Blocks Added:" + ('\n') + colorList.join('\n'))         artLayers[0].groupItems[0].selected = true;         artLayers[0].groupItems[0].selected = false;                 //Handle improper swatches in document and remove block layer to start fresh for next attempt                  if (wrongColorList.length > 0){            alert("THESE SWATCHES DO NOT BELONG:" + ('\n') + "Please fix your colors and run script again." + ('\n') + ('\n') + wrongColorList.join('\n'))            blockLayer.locked = false;            blockLayer.remove();            }        }    else {    alert("No Document Open");    }} // end function addColorBlocksaddColorBlocks();