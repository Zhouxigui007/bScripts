function colorSmasher(){        if(app.documents.length>0){        $.writeln(app.documents.length);            var docRef = app.activeDocument;        var aB = docRef.artboards;        var layers = docRef.layers;        var swatches = docRef.swatches;        var rectRef = null;        var textRectRef = null;        var textRef = null;        var currentColor = null;        var chipWidth = 100;        var chipHeight = 20;        var textHeightPad = 5;        var textWidthPad = 5;        var x = 0;        var y = 0;        var newX = 0;        var chipList = [];                        function existChipGroup(){            var groups = layers[0].groupItems            for (a=0; a<groups.length; a++){                if (groups[a].name == "Artwork Colors"){                    return true;                    } // end if current group is named "Artwork Colors"                else {                    return false;                    } // end else "artwork colors" does not exist                    } // end if exist group "Artwork Colors"                }// end for loop A            } // end function existChipGroup();                        layers[0].locked = false;        if (existChipGroup() == false){            var chipGroup = layers[0].groupItems.add();            chipGroup.name = "Artwork Colors";            } // end if        $.writeln(existChipGroup());                function populateChipList(){            for (b=0; b<swatches.length; b++){                $.writeln(swatches[b].color.typename);                if (swatches[b].color.typename == "SpotColor" && swatches[b].color.typename != "GradientColor" &&//                swatches[b].color.typename != "PatternColor" && swatches[b].name != "[None]" &&//                swatches[b].name != "[Registration]") {                    chipList.push(swatches[b].name);                }// end for loop B            } // end function populateChipList();                            populateChipList();                alert(chipList);                        function createChips(){            for(c=0; c< chipList.length; c++){                x = newX;                y = (aB.artboardRect[3] - 35)                rectRef = docRef.pathItems.rectangle(y,x,chipWidth,chipHeight);                currentColor = chipList[c].color;                rectRef.fillColor = currentColor;                newX = newX + 100;                } // end for loop C            } // end functionCreateChips();        createChips();    } // end if exist document} // end function colorSmasher();colorSmasher();